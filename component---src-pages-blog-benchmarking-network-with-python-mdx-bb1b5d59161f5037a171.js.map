{"version":3,"file":"component---src-pages-blog-benchmarking-network-with-python-mdx-bb1b5d59161f5037a171.js","mappings":"mQAQaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,uDACA,qJACiD,aAAGC,WAAW,IAC3D,KAAQ,2CADqC,iBADjD,mEAKA,2EACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,kBADZ,8BAIL,+DACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,mBADZ,sDAML,gMAEkB,sBAAYA,WAAW,KAAvB,cAFlB,SAEiF,sBAAYA,WAAW,KAAvB,YAFjF,8EAIF,aAAGA,WAAW,IACR,KAAQ,sEADd,SAJE,kFAQA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,mBADZ,goBA0BL,qCACF,aAAGA,WAAW,IACR,KAAQ,0EADd,wBADE,sHAKqD,aAAGA,WAAW,IAC/D,KAAQ,uCADyC,wDAQzDJ,EAAWK,gBAAiB","sources":["webpack://lock-dot-com/./src/pages/blog/Benchmarking_Network_With_Python.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/Personal-Website/Personal-Website/src/components/layout/MD_Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Network Benchmarking With Python`}</h1>\n    <p>{`If you are looking to set up a quick and easy way to benchmark your network\nconnection using Python look no further. Using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://pypi.org/project/speedtest-cli/\"\n      }}>{`speedtest-cli`}</a>{`\npackage you can monitor your network usage around the clock.`}</p>\n    <p>{`To start we will by installing the speedtest package.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`pip3 install speedtest\n`}</code></pre>\n    <p>{`Then importing the packages we are using.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import speedtest\nimport time\nimport datetime\n`}</code></pre>\n    <p>{`Following the initializing of the Speedtest Object we will start an infinite\nloop to collect the network data. On lines 11 and 12 we access the test\nobject and call the `}<inlineCode parentName=\"p\">{`download()`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`upload()`}</inlineCode>{` methods to get the\nnetwork speeds. These values, which are returned in\n`}<a parentName=\"p\" {...{\n        \"href\": \"http://www.wu.ece.ufl.edu/links/dataRate/DataMeasurementChart.html\"\n      }}>{`bytes`}</a>{`,\nare then appended to our CSV file with the timestamp of when it was taken.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`test = speedtest.Speedtest()  # Initialize the test object\n\nwhile True:\n\n  test.get_best_server()  # Make sure the best server is being used\n\n  for _ in range(12):  # Check for better server every two hours\n\n    # Generate the data\n    current_time = datetime.datetime.now()\n    download_speed = test.download()\n    upload_speed = test.upload()\n\n    csv_line = \",\".join(map(str, [current_time, download_speed, upload_speed])) + \"\\\\n\"\n\n    try:\n      with open(DATA_PATH, \"a\") as fp:\n        fp.write(csv_line)\n\n    except:\n      print(\"Oh No!\")\n\n    time.sleep(600)  # Rest for 10 minutes before next execution\n`}</code></pre>\n    <p>{`You can see an\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://raw.githubusercontent.com/CannonLock/data/master/benchmark.csv\"\n      }}>{`example of this data`}</a>{`\non my GitHub. If you are interested in the project that\nrequired this data you can refer to my project article `}<a parentName=\"p\" {...{\n        \"href\": \"/projects/Charter_Network_Benchmark\"\n      }}>{`\"Charter ISP - Slow\nInternet at 5pm or Delusion?\"`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}