"use strict";(self.webpackChunklock_dot_com=self.webpackChunklock_dot_com||[]).push([[6537],{88058:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return p},default:function(){return c}});var a=n(63366),o=(n(67294),n(64983)),r=n(32985),s=["components"],p={},i={_frontmatter:p},l=r.Z;function c(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)(l,Object.assign({},i,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",null,"Network Benchmarking With Python"),(0,o.kt)("p",null,"If you are looking to set up a quick and easy way to benchmark your network\nconnection using Python look no further. Using the ",(0,o.kt)("a",{parentName:"p",href:"https://pypi.org/project/speedtest-cli/"},"speedtest-cli"),"\npackage you can monitor your network usage around the clock."),(0,o.kt)("p",null,"To start we will by installing the speedtest package."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"pip3 install speedtest\n")),(0,o.kt)("p",null,"Then importing the packages we are using."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import speedtest\nimport time\nimport datetime\n")),(0,o.kt)("p",null,"Following the initializing of the Speedtest Object we will start an infinite\nloop to collect the network data. On lines 11 and 12 we access the test\nobject and call the ",(0,o.kt)("inlineCode",{parentName:"p"},"download()")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"upload()")," methods to get the\nnetwork speeds. These values, which are returned in\n",(0,o.kt)("a",{parentName:"p",href:"http://www.wu.ece.ufl.edu/links/dataRate/DataMeasurementChart.html"},"bytes"),",\nare then appended to our CSV file with the timestamp of when it was taken."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'test = speedtest.Speedtest()  # Initialize the test object\n\nwhile True:\n\n  test.get_best_server()  # Make sure the best server is being used\n\n  for _ in range(12):  # Check for better server every two hours\n\n    # Generate the data\n    current_time = datetime.datetime.now()\n    download_speed = test.download()\n    upload_speed = test.upload()\n\n    csv_line = ",".join(map(str, [current_time, download_speed, upload_speed])) + "\\n"\n\n    try:\n      with open(DATA_PATH, "a") as fp:\n        fp.write(csv_line)\n\n    except:\n      print("Oh No!")\n\n    time.sleep(600)  # Rest for 10 minutes before next execution\n')),(0,o.kt)("p",null,"You can see an\n",(0,o.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/CannonLock/data/master/benchmark.csv"},"example of this data"),"\non my GitHub. If you are interested in the project that\nrequired this data you can refer to my project article ",(0,o.kt)("a",{parentName:"p",href:"/projects/Charter_Network_Benchmark"},'"Charter ISP - Slow\nInternet at 5pm or Delusion?"')))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-blog-benchmarking-network-with-python-mdx-bb1b5d59161f5037a171.js.map