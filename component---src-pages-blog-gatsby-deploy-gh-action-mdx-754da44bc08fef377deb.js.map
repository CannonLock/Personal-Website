{"version":3,"file":"component---src-pages-blog-gatsby-deploy-gh-action-mdx-754da44bc08fef377deb.js","mappings":"mQAQaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,wEACA,kBAAG,aAAGC,WAAW,IACb,KAAQ,sCADT,kBAAH,yKAKA,sFAAwE,aAAGA,WAAW,IAClF,KAAQ,6BAD4D,mBAAxE,oEAKA,iDACA,yHACoB,sBAAYA,WAAW,KAAvB,2CADpB,4HAIA,8CACA,+HAEA,0CACA,oBAAK,gBAAMA,WAAW,OAAjB,4BAEL,+CACA,sNAEkD,aAAGA,WAAW,IAC5D,KAAQ,4FADsC,wBAFlD,MAKA,oBAAK,gBAAMA,WAAW,OAAjB,mDAKL,iCACA,2FACA,mBACE,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,eACA,aAAGA,WAAW,MAAd,2HACsC,aAAGA,WAAW,IAChD,KAAQ,2GAD0B,mBAGtC,eAAKA,WAAW,OAAK,gBAAMA,WAAW,OAAjB,0DAKvB,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,4BACA,aAAGA,WAAW,MAAd,sFAEA,eAAKA,WAAW,OAAK,gBAAMA,WAAW,OAAjB,sCAGvB,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,wBACA,aAAGA,WAAW,MAAd,sKAGA,eAAKA,WAAW,OAAK,gBAAMA,WAAW,MAClC,UAAa,kBADI,gJAQvB,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,oCACA,aAAGA,WAAW,MAAd,8HAEA,eAAKA,WAAW,OAAK,gBAAMA,WAAW,MAClC,UAAa,kBADI,gKAWvB,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,sBACA,eAAKA,WAAW,OAAK,gBAAMA,WAAW,MAClC,UAAa,kBADI,gDAMvB,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,uBACA,aAAGA,WAAW,MAAd,8cAOA,eAAKA,WAAW,OAAK,gBAAMA,WAAW,MAClC,UAAa,kBADI,6cAiBzB,uCACA,uKAEF,aAAGA,WAAW,IACR,KAAQ,0DADd,cAFE,wCAK2B,aAAGA,WAAW,IACrC,KAAQ,mGADe,iBAL3B,MAQA,sEACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,kBADZ,6vCAgDTJ,EAAWK,gBAAiB","sources":["webpack://lock-dot-com/./src/pages/blog/Gatsby_Deploy_GH_Action.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/Personal-Website/Personal-Website/src/components/layout/MD_Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Deploying Your Gatsby Website with Github Actions`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://docs.github.com/en/actions\"\n      }}>{`Github actions`}</a>{` are a great way to automate all of your code on Github.\nAnything that you plan on doing more than once can be automated and leaving\nmore time for the fun things.`}</p>\n    <p>{`Using the code walked through below you can reliably deploy your `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.com/\"\n      }}>{`Gatsby\nWebsite`}</a>{` on Github pages as easily as you push to\na remote repository.`}</p>\n    <h2>{`Create a New Github Action`}</h2>\n    <p>{`Adding a workflow to your current repository can be done creating a new yaml\nfile and adding it to `}<inlineCode parentName=\"p\">{`.github/workflows/<workflow-name\\\\>.yml`}</inlineCode>{`. When\nthis file is pushed to your remote Github Repo you will be able to find a\nnew action on your repo action page.`}</p>\n    <h2>{`Build the workflow file`}</h2>\n    <p>{`You can find details of the breakdown below, or you can bottom of the page\nto view the full action file.`}</p>\n    <h3>{`Add a Workflow name`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`name: Gatsby Publish\n`}</code></pre>\n    <h3>{`Add the Workflow Trigger`}</h3>\n    <p>{`The trigger is the event that causes our Action to run. In this case I\nhave set it so that a push to my master branch will result in a new\nwebsite build. You can learn more about this in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on\"\n      }}>{`workflow syntax docs`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`on:\n  push:\n    branches:\n      - master\n`}</code></pre>\n    <h3>{`Create Job`}</h3>\n    <p>{`This is the where we define what we want to run to the GitHub runner.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Set up job`}</p>\n        <p parentName=\"li\">{`The first task is to set up the machine for the GHA(GitHub Action) to run\non. You can view all machine options in the `}<a parentName=\"p\" {...{\n            \"href\": \"https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idruns-on\"\n          }}>{`documentation`}</a></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  jobs:\n    build:\n      runs-on: ubuntu-latest\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Checkout the Repository`}</p>\n        <p parentName=\"li\">{`This step checks out the repository the action is in so you can access\nits code.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  - uses: actions/checkout@v2\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Initialize Git User`}</p>\n        <p parentName=\"li\">{`This is necessary so that we can push to the deployment branch. The\ncheckout action handles branch permissions, so we don't have to worry about\nauthentication.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`  - name: Initialize GH User\n    run: |\n      git config user.name \"GitHub Actions\"\n      git config user.email \"actions@github.com\"\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Set Up and Install Node Modules`}</p>\n        <p parentName=\"li\">{`Using the package.json file in the websites root we will set up npm and\ninstall the needed modules to build our website.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`  - name: Set Node.js\n    uses: actions/setup-node@master\n    with:\n      node-version: '16'\n\n  - name: Install dependencies\n    run: npm install\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Build the Website`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`  - name: Build\n    run: npm run build\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Deploy the Website`}</p>\n        <p parentName=\"li\">{`First I copy over my CNAME file so that the website is\nserved from my custom domain. Next, and this is where it gets especially\nconfusing, I create a branch with the built website. To do this I commit\nthe built website to the current branch and then use subtree to split the\n'public' subdirectory into its own branch called 'gh-pages'. As gh-pages\nis the branch I serve my website from I then push this branch to origin\nwhere is published to the world`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`  - name: Deploy\n    run: |\n      # Add in the correct CNAME - Optional\n      echo \"<your-domain>\" > public/CNAME\n\n      # Commit the build then use 'git subtree' to create a branch with just the public contents\n      git add public -f\n      git commit -m \"Build Production Website\"\n      git checkout -b gh-pages \\`git subtree split --prefix public master\\`\n\n      # Push to Production\n      git push --set-upstream origin gh-pages --force\n`}</code></pre>\n      </li>\n    </ol>\n    <h2>{`Using the Action`}</h2>\n    <p>{`Using this action now can spend less time deploying and more time developing!\nYou can find the past runs for this action for this website in my\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/CannonLock/Personal-Website/actions\"\n      }}>{`repository`}</a>{`, and\nyou can find the actual file `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/CannonLock/Personal-Website/blob/master/.github/workflows/deploy-website.yml\"\n      }}>{`there as well`}</a>{`.`}</p>\n    <h2>{`Gatsby Deployment with GitHub Actions Full Code`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`name: Gatsby Publish\n\non:\n    push:\n        branches:\n            - master\n\njobs:\n    build:\n        runs-on: ubuntu-latest\n        steps:\n            -   uses: actions/checkout@v2\n\n            -   name: Initialize GH User\n                run: |\n                    git config user.name \"GitHub Actions\"\n                    git config user.email \"actions@github.com\"\n\n            -   name: Set Node.js\n                uses: actions/setup-node@master\n                with:\n                    node-version: '16'\n\n            -   name: Install dependencies\n                run: npm install\n\n            -   name: Build\n                run: npm run build\n\n            -   name: Deploy\n                run: |\n                    # Add in the correct CNAME - Optional\n                    echo <your-domain> > public/CNAME\n\n                    # Commit the build then use 'git subtree' to create a branch with just the public contents\n                    git add public -f\n                    git commit -m \"Build Production Website\"\n                    git checkout -b gh-pages \\`git subtree split --prefix public master\\`\n\n                    # Push to Production\n                    git push --set-upstream origin gh-pages --force\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}